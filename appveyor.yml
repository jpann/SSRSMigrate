# configuration for 'master' branch only.
# Build in Release node and deploy to GitHub
- 
  branches:
    only:
      - master

  image: Visual Studio 2015

  skip_non_tags: false
  skip_tags: true

  skip_commits:
    files:
      - '**/*.md'
      - '**/.rdl'

  version: 1.1.{build}

  assembly_info:
    patch: true
    file: '**\AssemblyInfo.*'
    assembly_version: '{version}'
    assembly_file_version: '{version}'
    assembly_informational_version: '{version}'

#  environment:
#    COVERALLS_REPO_TOKEN:
#      secure: kv0pn7M34ca0KP8NlRekeusUa+Uj325NlZOhMNnK1EPW2cudunWXbZ/igtRouTnC

  configuration:
    - Release

  platform:
    - x86
    - x64

  init:
    - git config --global core.autocrlf false
    - ps: $env:MY_PLATFORM=$env:PLATFORM.REPLACE(" ", "")

  install:
    - nuget install GitReleaseNotes.Portable -OutputDirectory %APPVEYOR_BUILD_FOLDER%\packages -Version 0.7.1

  before_build:
    - nuget restore "SSRSMigrate\SSRSMigrate.sln"

  build:
    project: SSRSMigrate\SSRSMigrate.sln
    verbosity: minimal

  test:
    assemblies:
      only:
        - SRSMigrate.Tests.dll
        - SSRSMigrate.IntegrationTests.dll

    # all except categories to test
    categories:
      except:
        - ConnectsToSSRS

  test_script:
    - nunit3-console "C:\projects\ssrsmigrate\SSRSMigrate\SSRSMigrate.Tests\bin\%MY_PLATFORM%\%CONFIGURATION%\SSRSMigrate.Tests.dll" "C:\projects\ssrsmigrate\SSRSMigrate\SSRSMigrate.IntegrationTests\bin\%MY_PLATFORM%\%CONFIGURATION%\SSRSMigrate.IntegrationTests.dll" --where cat!=ConnectsToSSRS

#  after_test:
#    - cd %APPVEYOR_BUILD_FOLDER%
#    - nuget install NUnit.ConsoleRunner -OutputDirectory packages -Version 3.9.0
#    - nuget install OpenCover -OutputDirectory packages -Version 4.6.519
#    - dotnet tool install coveralls.net --version 1.0.0 --tool-path tools
#    - .\packages\OpenCover.4.6.519\tools\OpenCover.Console.exe -register:user -filter:"+[SSRSMigrate]* -[SSRSMigrate]*.ReportServer20*.*" -excludebyattribute:*.CoverageExcludeAttribute* -target:".\packages\NUnit.ConsoleRunner.3.9.0\tools\nunit3-console.exe" -targetargs:"/domain:single SSRSMigrate\SSRSMigrate.Tests\bin\%MY_PLATFORM%\%CONFIGURATION%\SSRSMigrate.Tests.dll SSRSMigrate\SSRSMigrate.IntegrationTests\bin\%MY_PLATFORM%\%CONFIGURATION%\SSRSMigrate.IntegrationTests.dll --where cat!=ConnectsToSSRS" -output:coverage.xml
#    - .\tools\csmacnz.coveralls.exe --opencover -i coverage.xml --repoToken %COVERALLS_REPO_TOKEN%

  after_build:
    - cmd: cd SSRSMigrate\SSRSMigrate\bin\%MY_PLATFORM%\%CONFIGURATION%\
    - cmd: 7z a C:\projects\ssrsmigrate\SSRSMigrate-v%APPVEYOR_BUILD_VERSION%_%MY_PLATFORM%.zip *.* -x!*.pdb -x!*.vhost.*

  artifacts:
    - path: SSRSMigrate-v%APPVEYOR_BUILD_VERSION%_%MY_PLATFORM%.zip
      name: SSRSMigrate

  before_deploy:
    - ps: cd ${env:APPVEYOR_BUILD_FOLDER};
    - ps: .\packages\GitReleaseNotes.Portable.0.7.1\tools\GitReleaseNotes.exe . /OutputFile ReleaseNotes.md;
    - ps: ${env:release_description} = ( Get-Content -LiteralPath ReleaseNotes.md -Encoding UTF8 ) -join "`n";
    - ps: ${env:release_description} = ${env:release_description} + ".";
  
  deploy:
    release: SSRSMigrate-v$(APPVEYOR_BUILD_VERSION)
    description: SSRSMigrate release v$(APPVEYOR_BUILD_VERSION)\n$(release_description)
    provider: GitHub
    auth_token:
      secure: EXRr3SxM7c0kVhOc5HAyMr4gUaCJA11QE/RbTNrqYil9WXKDqoQoigCfdD6ZjhDX # encrypted token from GitHub
    artifact: /SSRSMigrate-v.*\.zip/
    draft: false
    prerelease: false
    tag: $(APPVEYOR_BUILD_VERSION)
    on:
      branch: 
        - master # release from master branch only

# configuration for 'develop' branch only.
# Build in Debug mode and don't deploy.
# -
#   branches:
#     only:
#       - develop

#   image: Visual Studio 2015

#   skip_non_tags: false
#   skip_tags: true

#   skip_commits:
#     files:
#       - '**/*.md'
#       - '**/.rdl'

#   version: develop-{build}

# # Don't patch assemblies for development versions
# #  assembly_info:
# #    patch: true
# #    file: '**\AssemblyInfo.*'
# #    assembly_version: '{version}'
# #    assembly_file_version: '{version}'
# #    assembly_informational_version: '{version}'

#   environment:
#     COVERALLS_REPO_TOKEN:
#       secure: kv0pn7M34ca0KP8NlRekeusUa+Uj325NlZOhMNnK1EPW2cudunWXbZ/igtRouTnC

#   configuration:
#     - Debug

#   init:
#     - git config --global core.autocrlf false

#   before_build:
#     - nuget restore "SSRSMigrate\SSRSMigrate.sln"

#   build:
#     project: SSRSMigrate\SSRSMigrate.sln
#     verbosity: minimal

#   test:
#     assemblies:
#       except:
#         - SSRSMigrate.IntegrationTests.dll

#   test_script:
#     - nunit3-console "C:\projects\ssrsmigrate\SSRSMigrate\SSRSMigrate.Tests\bin\%CONFIGURATION%\SSRSMigrate.Tests.dll" --x86

#   after_test:
#     - cd %APPVEYOR_BUILD_FOLDER%
#     - nuget install NUnit.ConsoleRunner -OutputDirectory packages -Version 3.9.0
#     - nuget install OpenCover -OutputDirectory packages -Version 4.6.519
#     - dotnet tool install coveralls.net --version 1.0.0 --tool-path tools
#     - .\packages\OpenCover.4.6.519\tools\OpenCover.Console.exe -register:user -filter:"+[SSRSMigrate.Tests*]*" -target:".\packages\NUnit.ConsoleRunner.3.9.0\tools\nunit3-console.exe" -targetargs:"/domain:single SSRSMigrate\SSRSMigrate.Tests\bin\%CONFIGURATION%\SSRSMigrate.Tests.dll --x86" -output:coverage.xml
#     - .\tools\csmacnz.coveralls.exe --opencover -i coverage.xml --repoToken %COVERALLS_REPO_TOKEN%
  
#   after_build:
#     - cmd: cd SSRSMigrate\SSRSMigrate\bin\%CONFIGURATION%\
#     - cmd: 7z a C:\projects\ssrsmigrate\SSRSMigrate-%APPVEYOR_BUILD_VERSION%.zip *.* -x!*.pdb -x!*.vhost.*

#   artifacts:
#     - path: SSRSMigrate-%APPVEYOR_BUILD_VERSION%.zip
#       name: SSRSMigrate

#   deploy:
#     release: SSRSMigrate-$(APPVEYOR_BUILD_VERSION)
#     description: SSRSMigrate development build version $(APPVEYOR_BUILD_VERSION).
#     provider: GitHub
#     auth_token:
#       secure: EXRr3SxM7c0kVhOc5HAyMr4gUaCJA11QE/RbTNrqYil9WXKDqoQoigCfdD6ZjhDX # encrypted token from GitHub
#     artifact: SSRSMigrate-$(APPVEYOR_BUILD_VERSION).zip
#     draft: false
#     prerelease: true
#     tag: $(APPVEYOR_BUILD_VERSION)
#     on:
#       branch: 
#         - develop # release from develop branch only
